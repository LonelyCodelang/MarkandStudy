git commit -a -m <'提交内容'>       //加入暂存区并提交
rm <文件名>                    //删除文件
git rm --cached <文件名>              //将文件移除git的托管，但文件不会删除
git checkout <文件名>             //还原挂起的更改（未加入暂存区的文件）
git reset <文件名>            //将文件移除暂存区
git status             //查看所有变更过的文件的状态（是否拉入暂存区）
git status -s	       //查看所有变更过的文件的状态（A代表是新添加文件，并已加入暂存区。M代表是已存在的文件，但经过修改。??代表新添加的文件，但未加入暂存区）
git add <文件名.后缀>  //将指定变更过的文件（删除、修改、添加）拉入暂存区，区分大小写
git add -A             //将所有变更过的文件（删除、修改、添加）拉入暂存区
echo <'内容'> > <文件名> //新建文件并将内容写入文件中

gggg1111

$ git push -u origin master -f  //强制推
$ git push <远程主机名> <branchName> //将当前分支推到远程分支branchName，如果branchName不存在，则创建
$ git pull origin master  

$ git add -A  全部确认
$ git commit -m "message"


$ git branch //查看当前分支
$ git branch -r //列出远程分支
$ git branch -a //列出所有分支
$ git branch -d -<> //删除分支
$ git branch branchName //创建分支
$ git branch -m <oldBranchName> <newBranchName> //重命名分支
$ git remote prune <origin> //同步远程分支的修改

$ git checkout branchName //切换分支
$ git checkout -b branchName //创建并切换到分支
$ git checkout -b <local>/<remote> //将远程分支映射到本地

$ git pull <远程主机名> <远程分支名>:<本地分支名>
$ git push <远程主机名> <本地分支名>:<远程分支名>
$ git fetch origin //将远程分支信息获取到本地

$ git remote add origin <address>
$ git push -u origin <branchName>

$ git fetch origin <远程分支>:<本地分支>
$ git diff <本地分支名> （比较当前工作区与目标分支的差异） 
$ git merge <本地分支名> (合并当前工作区与目标分支的差异)

ssh-keygen -t rsa -C "name"


warning: LF will be replaced by CRLF in xxx
LF是linux下的换行符，而CRLF是enter + 换行。执行git config --global core.autocrlf false。禁止自动替换 

end~~~~~~~~~~~~~~~~~~

lineB~~~